import request from 'supertest';
import { expect } from 'chai';
import { describe, before } from 'mocha';
import { app } from '../../src/app.js';
import axios from 'axios';
import { User } from '../../src/models/userModel.js';
import { doesNotReject } from 'assert';
import mongoose from 'mongoose';

let categoryId: any;

describe('POST /categories', () => {
  it('Se crea una categoria correctamente', async () => {
    const url = 'https://teal-monkey-hem.cyclic.app/api/categories';
    const category = {
      "category": "CategoriaPrueba",
      "description": "Descripción de la categoria de prueba"
    }
    
    const response = await axios.post(url, category);
    categoryId = response.data._id;
    expect(response.status).to.be.equal(201);
    expect(response.data).to.be.an('object');
    expect(response.data).to.have.property('category');
    expect(response.data).to.have.property('description');
    expect(response.data.category).to.be.equal('CategoriaPrueba');
    expect(response.data.description).to.be.equal('Descripción de la categoria de prueba');
  })
});

describe('GET /categories', () => {
  it('Se obtienen todas las categorias correctamente', async () => {
    const url = 'https://teal-monkey-hem.cyclic.app/api/categories';
    const response = await axios.get(url);
    expect(response.status).to.be.equal(200);
    expect(response.data.length).to.be.greaterThan(1);
  });

  it('Se obtiene una categoria correctamente', async () => {
    const url = `https://teal-monkey-hem.cyclic.app/api/categories/${categoryId}`;
    const response = await axios.get(url);
    expect(response.status).to.be.equal(200);
    expect(response.data[0]).to.be.an('object');
    expect(response.data[0]).to.have.property('category');
    expect(response.data[0]).to.have.property('description');
    expect(response.data[0].category).to.be.equal('CategoriaPrueba');
    expect(response.data[0].description).to.be.equal('Descripción de la categoria de prueba');
  });
});

describe('PATCH /categories/:category_id', () => {
  it('Se modifica una categoria correctamente', async () => {
    const url = `https://teal-monkey-hem.cyclic.app/api/categories/${categoryId}`;
    const category = {
      "category": "CategoriaPruebaModificada",
      "description": "Descripción de la categoria de prueba modificada"
    }
    const response = await axios.patch(url, category);
    expect(response.status).to.be.equal(200);
    expect(response.data).to.be.an('object');
    expect(response.data).to.have.property('category');
    expect(response.data).to.have.property('description');
    expect(response.data.category).to.be.equal('CategoriaPruebaModificada');
    expect(response.data.description).to.be.equal('Descripción de la categoria de prueba modificada');
  });
});



describe('DELETE /categories/:category_id', () => {
  it('Se elimina una categoria correctamente', async () => {
    const url = `https://teal-monkey-hem.cyclic.app/api/categories/${categoryId}`;
    const response = await axios.delete(url);
    expect(response.status).to.be.equal(200);
    expect(response.data).to.be.an('object');
    expect(response.data).to.have.property('category');
    expect(response.data).to.have.property('description');
    expect(response.data.category).to.be.equal('CategoriaPruebaModificada');
    expect(response.data.description).to.be.equal('Descripción de la categoria de prueba modificada');
  });
});
